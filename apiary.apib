FORMAT: 1A
HOST: https://floating-shore-97213.herokuapp.com

# Stacks API

Stacks API is an API to manage Projects, Services and People.

## Projects Collection [/projects]

### List all Projects [GET]

    + Response 200 (application/json)
    [
        {
            "question": "Favourite programming language?",
            "published_at": "2014-11-11T08:40:51.620Z",
            "url": "/questions/1",
            "choices": [
                {
                    "choice": "Swift",
                    "url": "/questions/1/choices/1",
                    "votes": 2048
                }, {
                    "choice": "Python",
                    "url": "/questions/1/choices/2",
                    "votes": 1024
                }, {
                    "choice": "Objective-C",
                    "url": "/questions/1/choices/3",
                    "votes": 512
                }, {
                    "choice": "Ruby",
                    "url": "/questions/1/choices/4",
                    "votes": 256
                }
            ]
        }
    ]

### Create a new Project [POST]

You may create your own project using this action. It takes a JSON object containing a question and a collection of answers in the form of choices.

+ question (string) - The question
+ choices (array[string]) - A collection of choices.
+ Request (application/json)
    {
        "question": "Favourite programming language?",
        "choices": [
            "Swift",
            "Python",
            "Objective-C",
            "Ruby"
        ]
    }
+ Response 201 (application/json)
    + Headers
        Location: /projects/1
    + Body
        {
            "question": "Favourite programming language?",
            "published_at": "2014-11-11T08:40:51.620Z",
            "url": "/questions/1",
            "choices": [
                {
                    "choice": "Swift",
                    "url": "/questions/1/choices/1",
                    "votes": 0
                }, {
                    "choice": "Python",
                    "url": "/questions/1/choices/2",
                    "votes": 0
                }, {
                    "choice": "Objective-C",
                    "url": "/questions/1/choices/3",
                    "votes": 0
                }, {
                    "choice": "Ruby",
                    "url": "/questions/1/choices/4",
                    "votes": 0
                }
            ]
        }
        
## Project [/projects/{project_id}]

### Get a project [GET]
+ Parameters
    + project_id (number) - ID of the Project in the form of an integer
+ Response 200 (application/json)
    {
        "question": "Favourite programming language?",
        "published_at": "2014-11-11T08:40:51.620Z",
        "url": "/questions/1",
        "choices": [
            {
                "choice": "Swift",
                "url": "/questions/1/choices/1",
                "votes": 2048
            }, {
                "choice": "Python",
                "url": "/questions/1/choices/2",
                "votes": 1024
            }, {
                "choice": "Objective-C",
                "url": "/questions/1/choices/3",
                "votes": 512
            }, {
                "choice": "Ruby",
                "url": "/questions/1/choices/4",
                "votes": 256
            }
        ]
    }

### Update a project [POST]

### Delete a project [DELETE]
+ Response 204

## Service Collection [/services]

### List 

## People Collection [/people]

